function solution(s){
	let prime = [] //소수넣을 빈 배열 만들기
  let nonPrime = [] //소수 아닌 값 넣을 빈 배열 만들기
  let ssplit = s.split(' ') //s의 공백을 분리시켜 배열 만들기
  for (let i = 0; i<ssplit.length; i++) {
  if (isPrime(ssplit[i])) { //소수라면
        prime.push(ssplit[i]) //소수배열에 넣고
      } else { //아니면
        nonPrime.push(ssplit[i]) //소수 아닌 배열에 넣어라
      }
  }
  let maxPrime = prime.sort((a, b) => b - a) //소수배열은 내림차순 정렬하기(최대값 구하기 위해)
  let minNonPrime = nonPrime.sort((a, b) => a - b) //소수아닌 배열은 오름차순 정렬하기(최소값 구하기 위해)
  return `${minNonPrime[0]} ${maxPrime[0]}` //소수아닌 배열의 최소값과 소수배열의 최대값을 리턴한다
}
//소수 구하는 함수
const isPrime = function (n) {
  for (let i = 2; i <= Math.sqrt(n); i++) {
    if (n % i === 0) {
      return false;
    }
  }
  return true
}

let s= "97 75 88 99 95 92 73"

console.log(solution(s))